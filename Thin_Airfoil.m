clear; clc; close all;

points = readmatrix('NACA1408.dat');    %Load Ptofile Data
x = points(:,1); y = points(:,2);               %Get x and y Value
j = 0; k = 0;                                   %Counters

%To Obtain Upper and Bottom Profile
for i = 1:length(points)
    if y(i)>0                   %Upper Profile Data
        j = j + 1;
        y_top(j,1) = y(i);      %y-axis Value of Upper
        x_top(j,1) = x(i);      %x-axis Value of Bottom
    elseif y(i)<0               %Bottom Profile Data
        y_bottom(j,1) = y(i);   %y-axis Value of Bottom
        x_bottom(j,1) = x(i);   %x-axis Value of Bottom
        j = j-1;
    end
end

%Assuming that y-xis value of bottom and upper profile place at same 
%x-axis point. Then mean of y-axis values gives mean chamber line points.
clear x;
x = x_bottom;
Chamber_points_x(:,1) = x_bottom;

for i = 1: length(x)
    Chamber_points_y(i,1) = (y_top(i) + y_bottom(i))/2;
end

[fitresult, gof] = createFit(Chamber_points_x, Chamber_points_y);
coeff = coeffvalues(fitresult);

syms x theta n V AoA
%Chamber Line as Function of x

CLx(x) = coeff(1) * x^4 + coeff(2) * x^3 + coeff(3) * x^2 ...
    + coeff(4) * x + coeff(5);

dCLx(x) = diff(CLx);

%Coordinate Transformation 
% x = ((1 - cos(theta)) / 2);

dyc_dx = dCLx((1 - cos(theta)) / 2);

AoA = double(0);
A0 = AoA - double(1/pi * int(dyc_dx,theta,0,pi));
sum = 0;

for i = 1:3
    An(i,1) = double(2/pi * int(dyc_dx * cos(i * theta), theta,0, pi));
    sum = sum + (An(i,1) * sin(i * theta));
end

%An = 2/pi * int(CL * cos(n*theta), theta,0, pi);

SoV_2V(theta) = (A0 * (1+cos(theta)) / (sin(theta))) + sum;

%%%%%% Plotting Strength of Vortex Sheet per unit length %%%%%%%%%%%%%%%%%
figure(2)
fplot(SoV_2V,[0 pi])
ax=gca;
ax.XGrid = 'on';
ax.YGrid = 'on';
ax.YLim = [-0.005 0.03];
ax.XLim = [0 pi];
ax.XTick = [0 pi/4 pi/2 3*pi/4 pi];
ax.XTickLabel = ["0", "0.25", "0.5", "0.75", "1"];

xlabel('x/c','FontSize',11,'Interpreter','latex');
ylabel('$\frac{\gamma(\theta)}{2V_{\infty}}$','FontSize',15,...
    'Interpreter','latex',...
    'VerticalAlignment','middle',...
    'Rotation',0);
title('$\gamma(\theta)$ along the camber line', 'Interpreter','Latex')

%Calculation of zero lift AoA and moment coeff. around aero. center

AoA_L0 = double(- 1/pi * int(dyc_dx*(cos(theta) - 1),theta,0,pi));

cm_ac = pi/4 * (An(2,1) - An(1,1));

%Calculation of lift coeff.

cl = @(AoA) 2 * pi * (AoA - rad2deg(AoA_L0));

%fplot(cl,[-20 20])

%%%%%% Curve Fitting Function
function [fitresult, gof] = createFit(Chamber_points_x, Chamber_points_y)
%CREATEFIT(CHAMBER_POINTS_X,CHAMBER_POINTS_Y)
%  Create a fit.
%
%  Data for 'Chamber_Line' fit:
%      X Input : Chamber_points_x
%      Y Output: Chamber_points_y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 02-Dec-2022 12:04:17


%% Fit: 'Chamber_Line'.
[xData, yData] = prepareCurveData( Chamber_points_x, Chamber_points_y );

% Set up fittype and options.
ft = fittype( 'poly4' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Normalize = 'on';
opts.Robust = 'Bisquare';

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Chamber_Line' );
plot( fitresult, xData, yData );

xlabel( 'x/c', 'Interpreter', 'latex' );
ylabel( 'y/c', 'Interpreter', 'latex' );

ax=gca;
ax.YLim = [0 0.05];
ax.XLim = [0 1];
ax.XTick = [0 0.25 0.5 0.75 1];

%title('$\gamma(\theta)$ Along the Camber Line', 'Interpreter','Latex')
legend('Chamber','Chamber Line with Curve Fitting','Interpreter','Latex')

grid on
end